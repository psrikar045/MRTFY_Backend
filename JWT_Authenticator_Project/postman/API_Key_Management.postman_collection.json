{
	"info": {
		"_postman_id": "api-key-management-collection",
		"name": "API Key Management - JWT Authenticator",
		"description": "Comprehensive collection for testing API Key functionality including user management and admin operations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "api-key-management"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.token) {",
									"        pm.environment.set('jwt_token', response.token);",
									"        pm.environment.set('user_id', response.userId || response.username);",
									"        console.log('JWT Token saved:', response.token.substring(0, 20) + '...');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{test_username}}\",\n    \"password\": \"{{test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.token) {",
									"        pm.environment.set('admin_jwt_token', response.token);",
									"        pm.environment.set('admin_user_id', response.userId || response.username);",
									"        console.log('Admin JWT Token saved:', response.token.substring(0, 20) + '...');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{admin_username}}\",\n    \"password\": \"{{admin_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User API Key Management",
			"item": [
				{
					"name": "Create API Key - Basic",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('api_key_id', response.id);",
									"    pm.environment.set('api_key_value', response.keyValue);",
									"    console.log('API Key created:', response.keyValue);",
									"    console.log('API Key ID:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My Test API Key\",\n    \"description\": \"API key for testing purposes\",\n    \"prefix\": \"sk-\",\n    \"rateLimitTier\": \"BASIC\",\n    \"scopes\": [\"READ_USERS\", \"READ_BRANDS\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/api-keys",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"api-keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create API Key - Advanced",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('advanced_api_key_id', response.id);",
									"    pm.environment.set('advanced_api_key_value', response.keyValue);",
									"    console.log('Advanced API Key created:', response.keyValue);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Production API Key\",\n    \"description\": \"API key for production environment with restrictions\",\n    \"prefix\": \"sk-\",\n    \"expiresAt\": \"2024-12-31T23:59:59\",\n    \"allowedIps\": [\"192.168.1.100\", \"10.0.0.1\"],\n    \"allowedDomains\": [\"example.com\", \"api.example.com\"],\n    \"rateLimitTier\": \"STANDARD\",\n    \"scopes\": [\"READ_USERS\", \"READ_BRANDS\", \"WRITE_BRANDS\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/api-keys",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"api-keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All My API Keys",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/api-keys",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"api-keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific API Key",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/api-keys/{{api_key_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"api-keys",
								"{{api_key_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update API Key",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated API Key Name\",\n    \"description\": \"Updated description for the API key\",\n    \"isActive\": true,\n    \"expiresAt\": \"2025-12-31T23:59:59\",\n    \"allowedIps\": [\"192.168.1.100\", \"192.168.1.101\"],\n    \"allowedDomains\": [\"example.com\", \"api.example.com\", \"dev.example.com\"],\n    \"rateLimitTier\": \"PREMIUM\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/api-keys/{{api_key_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"api-keys",
								"{{api_key_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke API Key",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/api-keys/{{advanced_api_key_id}}/revoke",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"api-keys",
								"{{advanced_api_key_id}}",
								"revoke"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete API Key",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/api-keys/{{advanced_api_key_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"api-keys",
								"{{advanced_api_key_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Key Usage Testing",
			"item": [
				{
					"name": "Test API Key Authentication - Success",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "{{api_key_value}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/brands/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"brands",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test API Key with Rate Limiting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check rate limit headers",
									"const rateLimitLimit = pm.response.headers.get('X-RateLimit-Limit');",
									"const rateLimitRemaining = pm.response.headers.get('X-RateLimit-Remaining');",
									"const rateLimitReset = pm.response.headers.get('X-RateLimit-Reset');",
									"",
									"console.log('Rate Limit - Limit:', rateLimitLimit);",
									"console.log('Rate Limit - Remaining:', rateLimitRemaining);",
									"console.log('Rate Limit - Reset:', rateLimitReset);",
									"",
									"if (rateLimitLimit) {",
									"    pm.environment.set('rate_limit_limit', rateLimitLimit);",
									"}",
									"if (rateLimitRemaining) {",
									"    pm.environment.set('rate_limit_remaining', rateLimitRemaining);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "{{api_key_value}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/category/hierarchy",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"category",
								"hierarchy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Invalid API Key",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "sk-invalid-key-12345"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/brands/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"brands",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test API Key without Header",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/brands/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"brands",
								"all"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin API Key Management",
			"item": [
				{
					"name": "Get All API Keys (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/api-keys/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"api-keys",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get API Keys for Specific User (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/api-keys/user/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"api-keys",
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create API Key for User (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('admin_created_key_id', response.id);",
									"    pm.environment.set('admin_created_key_value', response.keyValue);",
									"    console.log('Admin created API Key:', response.keyValue);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Admin Created Key\",\n    \"description\": \"API key created by administrator\",\n    \"prefix\": \"admin-\",\n    \"rateLimitTier\": \"ENTERPRISE\",\n    \"scopes\": [\"ADMIN_ACCESS\", \"READ_USERS\", \"WRITE_USERS\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/api-keys/user/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"api-keys",
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get API Key Usage Stats (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/api-keys/{{api_key_id}}/usage",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"api-keys",
								"{{api_key_id}}",
								"usage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get System Statistics (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/api-keys/stats",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"api-keys",
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Any API Key (Admin)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/api-keys/{{admin_created_key_id}}/revoke",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"api-keys",
								"{{admin_created_key_id}}",
								"revoke"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Any API Key (Admin)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/api-keys/{{admin_created_key_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"api-keys",
								"{{admin_created_key_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset Rate Limit (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/api-keys/{{api_key_id}}/rate-limit/reset",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"api-keys",
								"{{api_key_id}}",
								"rate-limit",
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update API Key Scopes (Admin)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{admin_jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scopes\": \"READ_USERS,WRITE_USERS,READ_BRANDS,WRITE_BRANDS\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/api-keys/{{api_key_id}}/scopes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"api-keys",
								"{{api_key_id}}",
								"scopes"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Scenarios",
			"item": [
				{
					"name": "Create API Key - Invalid Rate Limit Tier",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Invalid Tier Key\",\n    \"description\": \"Testing invalid rate limit tier\",\n    \"prefix\": \"sk-\",\n    \"rateLimitTier\": \"INVALID_TIER\",\n    \"scopes\": [\"READ_USERS\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/api-keys",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"api-keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create API Key - Invalid Scope",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Invalid Scope Key\",\n    \"description\": \"Testing invalid scope\",\n    \"prefix\": \"sk-\",\n    \"rateLimitTier\": \"BASIC\",\n    \"scopes\": [\"INVALID_SCOPE\", \"READ_USERS\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/api-keys",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"api-keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create API Key - Empty Name",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"description\": \"Testing empty name\",\n    \"prefix\": \"sk-\",\n    \"rateLimitTier\": \"BASIC\",\n    \"scopes\": [\"READ_USERS\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/api-keys",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"api-keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create API Key - Duplicate Name",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My Test API Key\",\n    \"description\": \"Testing duplicate name\",\n    \"prefix\": \"sk-\",\n    \"rateLimitTier\": \"BASIC\",\n    \"scopes\": [\"READ_USERS\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/api-keys",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"api-keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Access API Key without Authentication",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/api-keys",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"api-keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Access Admin Endpoint as Regular User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/api-keys/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"api-keys",
								"all"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Rate Limiting Tests",
			"item": [
				{
					"name": "Rate Limit Test - Request 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const rateLimitRemaining = pm.response.headers.get('X-RateLimit-Remaining');",
									"console.log('Request 1 - Remaining:', rateLimitRemaining);",
									"pm.environment.set('remaining_after_1', rateLimitRemaining);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "{{api_key_value}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/brands/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"brands",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Rate Limit Test - Request 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const rateLimitRemaining = pm.response.headers.get('X-RateLimit-Remaining');",
									"console.log('Request 2 - Remaining:', rateLimitRemaining);",
									"pm.environment.set('remaining_after_2', rateLimitRemaining);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "{{api_key_value}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/category/hierarchy",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"category",
								"hierarchy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Rate Limit Test - Request 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const rateLimitRemaining = pm.response.headers.get('X-RateLimit-Remaining');",
									"console.log('Request 3 - Remaining:', rateLimitRemaining);",
									"",
									"// Check if rate limited",
									"if (pm.response.code === 429) {",
									"    console.log('Rate limit exceeded!');",
									"    pm.test('Rate limit working correctly', function () {",
									"        pm.response.to.have.status(429);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "{{api_key_value}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/brands/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"brands",
								"all"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script",
					"console.log('Making request to:', pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"console.log('Response status:', pm.response.code);",
					"console.log('Response time:', pm.response.responseTime + 'ms');"
				]
			}
		}
	],
	"variable": [
		{
			"key": "collection_version",
			"value": "1.0.0"
		}
	]
}