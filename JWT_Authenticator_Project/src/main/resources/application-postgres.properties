# Database Configuration - supports environment variables for deployment
#spring.datasource.url=jdbc:postgresql://database-1.ctoysco66obu.eu-north-1.rds.amazonaws.com:5432/myprojectdb
#spring.datasource.username=postgres
#spring.datasource.password=srikar045

spring.datasource.url=jdbc:postgresql://202.65.155.115:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=Marketyfy@123
spring.datasource.driver-class-name=org.postgresql.Driver

# Set to "update" for first run with API keys, then can change to "validate"
# Options: create, create-drop, update, validate, none
spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.format_sql=true

# Connection Pool Configuration - Optimized for PostgreSQL max_connections=90
# ✅ OPTIMIZED: Using ~60% of available connections (54/90) leaving room for admin/other apps
spring.datasource.hikari.maximum-pool-size=54
spring.datasource.hikari.minimum-idle=12
# ✅ FIXED: Reasonable connection timeout 10 seconds)
spring.datasource.hikari.connection-timeout=10000
# ✅ FIXED: Shorter idle timeout to prevent stale connections (5 minutes)
spring.datasource.hikari.idle-timeout=300000
# ✅ FIXED: Shorter max lifetime to prevent connection issues (10 minutes)  
spring.datasource.hikari.max-lifetime=600000
# ✅ FIXED: Aggressive leak detection (30 seconds)
spring.datasource.hikari.leak-detection-threshold=30000
spring.datasource.hikari.pool-name=HikariCP-Main
# ✅ FIXED: Connection validation and cleanup settings
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.initialization-fail-timeout=30000
# ✅ FIXED: Proper connection validation and resilience
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.test-while-idle=true
spring.datasource.hikari.test-on-borrow=true
spring.datasource.hikari.register-mbeans=true
# ✅ ADDED: Connection pool resilience settings
spring.datasource.hikari.connection-init-sql=SELECT 1
spring.datasource.hikari.isolate-internal-queries=true
spring.datasource.hikari.allow-pool-suspension=true

# JPA Memory optimizations
spring.jpa.properties.hibernate.jdbc.batch_size=30
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.generate_statistics=false

# ✅ FIXED: Transaction management for connection leak prevention
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false
spring.jpa.properties.hibernate.connection.autocommit=true
# ✅ FIXED: Shorter transaction timeout (1 minute) to prevent long-running transactions
spring.transaction.default-timeout=60
spring.jpa.properties.hibernate.transaction.coordinator_class=jdbc
# ✅ FIXED: Reasonable query timeout (30 seconds)
spring.jpa.properties.hibernate.query.timeout=30000

# Tomcat Configuration - Balanced with HikariCP pool (54 max connections)
server.tomcat.max-threads=40
server.tomcat.min-spare-threads=8  
server.tomcat.max-connections=800
# ✅ FIXED: Reasonable connection timeout (20 seconds)
server.tomcat.connection-timeout=20000
