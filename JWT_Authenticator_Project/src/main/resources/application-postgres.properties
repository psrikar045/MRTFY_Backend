# Server Configuration
server.port=${PORT:8080}
server.address=0.0.0.0

# Database Configuration - supports environment variables for deployment
#spring.datasource.url=jdbc:postgresql://database-1.ctoysco66obu.eu-north-1.rds.amazonaws.com:5432/myprojectdb
#spring.datasource.username=postgres
#spring.datasource.password=srikar045

spring.datasource.url=jdbc:postgresql://202.65.155.115:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=Marketyfy@123
spring.datasource.driver-class-name=org.postgresql.Driver

# Set to "update" for first run with API keys, then can change to "validate"
# Options: create, create-drop, update, validate, none
spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.format_sql=true

# Connection Pool Configuration - Fixed for production stability
# ✅ FIXED: Optimized pool size for better connection management
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
# ✅ FIXED: Reasonable connection timeout (30 seconds)
spring.datasource.hikari.connection-timeout=30000
# ✅ FIXED: Shorter idle timeout to prevent stale connections (10 minutes)
spring.datasource.hikari.idle-timeout=600000
# ✅ FIXED: Shorter max lifetime to prevent connection issues (30 minutes)
spring.datasource.hikari.max-lifetime=1800000
# ✅ FIXED: Reasonable leak detection threshold (2 minutes)
spring.datasource.hikari.leak-detection-threshold=120000
spring.datasource.hikari.pool-name=HikariCP-Main
# ✅ FIXED: Connection validation and cleanup settings
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.initialization-fail-timeout=1
# ✅ FIXED: Proper connection validation
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.test-while-idle=true
spring.datasource.hikari.test-on-borrow=true
spring.datasource.hikari.register-mbeans=true

# JPA Memory optimizations
spring.jpa.properties.hibernate.jdbc.batch_size=30
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.generate_statistics=false

# ✅ FIXED: Transaction management for connection leak prevention
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false
spring.jpa.properties.hibernate.connection.autocommit=true
# ✅ FIXED: Reasonable transaction timeout (2 minutes)
spring.transaction.default-timeout=120
spring.jpa.properties.hibernate.transaction.coordinator_class=jdbc
# ✅ FIXED: Reasonable query timeout (30 seconds)
spring.jpa.properties.hibernate.query.timeout=30000

# Tomcat Configuration - Optimized for stability
server.tomcat.max-threads=50
server.tomcat.min-spare-threads=10
server.tomcat.max-connections=1000
# ✅ FIXED: Reasonable connection timeout (20 seconds)
server.tomcat.connection-timeout=20000



# JWT Secret (change this in production)
jwt.secret=mySecretKeyThatIsAtLeast256BitsLongForJwtTokenGeneration12345

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=tyedukondalu@stratapps.com
spring.mail.password=whesvjdtjmyhgwwt
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
