package com.example.jwtauthenticator.entity;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;
import java.util.UUID;

/**
 * ðŸš€ RivoFetch Request Log Entity - Dedicated logging for RivoFetch API calls
 * 
 * This entity represents the dedicated logging table for RivoFetch requests
 * with RIVO9XXXXXX ID format and comprehensive tracking capabilities.
 * 
 * Features:
 * - RIVO9XXXXXX primary key format
 * - Comprehensive request/response tracking
 * - Performance metrics collection
 * - Cache hit type tracking
 * - Domain validation results
 * - Rate limiting information
 * 
 * @author BrandSnap API Team
 * @version 2.0
 * @since Java 21 - Phase 2 Implementation
 */
@Entity
@Table(name = "rivo_fetch_request_logs", indexes = {
    @Index(name = "idx_rivo_fetch_timestamp", columnList = "rivoFetchTimestamp"),
    @Index(name = "idx_rivo_fetch_api_key_id", columnList = "rivoFetchApiKeyId"),
    @Index(name = "idx_rivo_fetch_user_id", columnList = "rivoFetchUserId"),
     @Index(name = "idx_rivo_fetch_url_domain", columnList = "rivoFetchUrlDomain"),
    @Index(name = "idx_rivo_fetch_success", columnList = "rivoFetchSuccess"),
    @Index(name = "idx_rivo_fetch_cache_hit_type", columnList = "rivoFetchCacheHitType"),
    @Index(name = "idx_rivo_fetch_api_key_timestamp", columnList = "rivoFetchApiKeyId,rivoFetchTimestamp"),
    @Index(name = "idx_rivo_fetch_performance", columnList = "rivoFetchTotalDurationMs,rivoFetchSuccess")
})
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class RivoFetchRequestLog {

    // ==================== PRIMARY KEY ====================
    
    /**
     * Primary key with RIVO9XXXXXX format
     * Generated by RivoFetchIdGeneratorService
     */
    @Id
    @Column(name = "rivo_fetch_log_id", length = 12, nullable = false)
    private String rivoFetchLogId;

    // ==================== UNIVERSAL TRACKING ====================
    
    /**
     * Universal request UUID for cross-service correlation
     */
    @Column(name = "universal_request_uuid", nullable = false)
    private UUID universalRequestUuid;

    // ==================== TIMING INFORMATION ====================
    
    /**
     * Request timestamp
     */
    @Column(name = "rivo_fetch_timestamp", nullable = false)
    private LocalDateTime rivoFetchTimestamp;

    /**
     * Total request duration in milliseconds
     */
    @Column(name = "rivo_fetch_total_duration_ms")
    private Long rivoFetchTotalDurationMs;

    // ==================== REQUEST INFORMATION ====================
    
    /**
     * Target URL being fetched by RivoFetch
     */
    @Column(name = "rivo_fetch_target_url", length = 2048)
    private String rivoFetchTargetUrl;

    /**
     * Domain extracted from target URL
     */
    @Column(name = "rivo_fetch_url_domain", length = 255)
    private String rivoFetchUrlDomain;

    /**
     * Request domain from headers
     */
    @Column(name = "rivo_fetch_request_domain", length = 255)
    private String rivoFetchRequestDomain;

    /**
     * Client IP address
     */
    @Column(name = "rivo_fetch_client_ip", length = 45)
    private String rivoFetchClientIp;

    /**
     * User agent string
     */
    @Column(name = "rivo_fetch_user_agent", length = 1000)
    private String rivoFetchUserAgent;

    /**
     * Query string parameters
     */
    @Column(name = "rivo_fetch_query_string", length = 2048)
    private String rivoFetchQueryString;

    /**
     * Request size in bytes
     */
    @Column(name = "rivo_fetch_request_size_bytes")
    private Long rivoFetchRequestSizeBytes;

    // ==================== API KEY INFORMATION ====================
    
    /**
     * API key ID used for the request
     */
    @Column(name = "rivo_fetch_api_key_id")
    private UUID rivoFetchApiKeyId;

    /**
     * User ID associated with the API key (String to match users table)
     */
    @Column(name = "rivo_fetch_user_id", length = 11)
    private String rivoFetchUserId;

    /**
     * Rate limit tier at time of request
     */
    @Column(name = "rivo_fetch_rate_limit_tier", length = 50)
    private String rivoFetchRateLimitTier;

    // ==================== CONTROLLER CONTEXT ====================
    
    /**
     * Controller name that handled the request
     */
    @Column(name = "rivo_fetch_controller_name", length = 100)
    private String rivoFetchControllerName;

    /**
     * Method name that handled the request
     */
    @Column(name = "rivo_fetch_method_name", length = 100)
    private String rivoFetchMethodName;

    /**
     * Request source (API_KEY, JWT_AUTH, PUBLIC)
     */
    @Column(name = "rivo_fetch_request_source", length = 20)
    private String rivoFetchRequestSource;

    /**
     * HTTP response status code
     */
    @Column(name = "rivo_fetch_response_status")
    private Integer rivoFetchResponseStatus;
    
    /**
     * Response size in bytes
     */
    @Column(name = "rivo_fetch_response_size_bytes")
    private Long rivoFetchResponseSizeBytes;
    
    /**
     * Request success status
     */
    @Column(name = "rivo_fetch_success")
    private Boolean rivoFetchSuccess;
    
    /**
     * Error message if request failed
     */
    @Column(name = "rivo_fetch_error_message", columnDefinition = "TEXT")
    private String rivoFetchErrorMessage;

    /**
     * External API call duration in milliseconds
     */
    @Column(name = "rivo_fetch_external_api_duration_ms")
    private Long rivoFetchExternalApiDurationMs;
    
    /**
     * Cache hit type (MISS, DATABASE_HIT, MEMORY_HIT)
     */
    @Column(name = "rivo_fetch_cache_hit_type", length = 20)
    private String rivoFetchCacheHitType;

    /**
     * Domain validation success status
     */
    @Column(name = "rivo_fetch_domain_validation_success")
    private Boolean rivoFetchDomainValidationSuccess;
    
    /**
     * Matched domain from API key configuration
     */
    @Column(name = "rivo_fetch_matched_domain", length = 255)
    private String rivoFetchMatchedDomain;

    /**
     * Remaining rate limit count
     */
    @Column(name = "rivo_fetch_rate_limit_remaining")
    private Integer rivoFetchRateLimitRemaining;
    
    /**
     * Rate limit reset time
     */
    @Column(name = "rivo_fetch_rate_limit_reset_time")
    private LocalDateTime rivoFetchRateLimitResetTime;

    /**
     * HTTP request method
     */
    @Column(name = "rivo_fetch_request_method", length = 10)
    private String rivoFetchRequestMethod;
    
    /**
     * Request path
     */
    @Column(name = "rivo_fetch_request_path", length = 255)
    private String rivoFetchRequestPath;

    /**
     * Record creation timestamp
     */
    @Column(name = "rivo_fetch_created_at")
    private LocalDateTime rivoFetchCreatedAt;
    
    /**
     * Record last update timestamp
     */
    @Column(name = "rivo_fetch_updated_at")
    private LocalDateTime rivoFetchUpdatedAt;

    // ==================== HELPER METHODS ====================
    
    /**
     * Get formatted log ID for display
     */
    public String getFormattedLogId() {
        return rivoFetchLogId != null ? rivoFetchLogId : "UNKNOWN";
    }

    /**
     * Check if request was successful
     */
    public boolean isSuccessful() {
        return rivoFetchSuccess != null && rivoFetchSuccess;
    }

    /**
     * Get duration in seconds
     */
    public Double getDurationInSeconds() {
        return rivoFetchTotalDurationMs != null ? rivoFetchTotalDurationMs / 1000.0 : null;
    }

    @Override
    public String toString() {
        return String.format(
            "RivoFetchRequestLog{id='%s', timestamp=%s, targetUrl='%s', duration=%dms, apiKeyId=%s}",
            rivoFetchLogId, rivoFetchTimestamp, rivoFetchTargetUrl, 
            rivoFetchTotalDurationMs, rivoFetchApiKeyId
        );
    }
}